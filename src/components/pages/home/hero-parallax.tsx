'use client'
import React, { useState } from 'react'
import {
  motion,
  useScroll,
  useTransform,
  useSpring,
  MotionValue,
} from 'framer-motion'
import AnimatedButon from '../Buttons/button.js'
import { useNavigate } from 'react-router-dom'

export const HeroParallax = ({
  products,
}: {
  products: {
    title: string
    link: string
    thumbnail: string
  }[]
}) => {
  const firstRow = products.slice(0, 5)
  const secondRow = products.slice(5, 10)
  const ref = React.useRef(null)
  const { scrollYProgress } = useScroll({
    target: ref,
    offset: ['start start', 'end start'],
  })

  const springConfig = { stiffness: 300, damping: 30, bounce: 100 }

  const translateX = useSpring(
    useTransform(scrollYProgress, [0, 1], [0, 1000]),
    springConfig
  )

  const translateXReverse = useSpring(
    useTransform(scrollYProgress, [0, 1], [0, -1000]),
    springConfig
  )
  const rotateX = useSpring(
    useTransform(scrollYProgress, [0, 0.2], [15, 0]),
    springConfig
  )
  const opacity = useSpring(
    useTransform(scrollYProgress, [0, 0.2], [0.2, 1]),
    springConfig
  )
  const rotateZ = useSpring(
    useTransform(scrollYProgress, [0, 0.2], [20, 0]),
    springConfig
  )
  const translateY = useSpring(
    useTransform(scrollYProgress, [0, 0.2], [-700, 20]),
    springConfig
  )

  return (
    <div
      ref={ref}
      className="h-max pt-20 overflow-hidden antialiased relative flex flex-col self-auto [perspective:1000px] [transform-style:preserve-3d]"
    >
      <Header />
      <motion.div
        style={{
          rotateX,
          rotateZ,
          translateY,
          opacity,
        }}
        className="div"
      >
        <motion.div className="flex flex-row-reverse space-x-reverse space-x-20 mb-20">
          {firstRow.map((product) => (
            <ProductCard
              product={product}
              translate={translateX}
              key={product.title}
            />
          ))}
        </motion.div>
        <motion.div className="flex flex-row  mb-20 space-x-20 ">
          {secondRow.map((product) => (
            <ProductCard
              product={product}
              translate={translateXReverse}
              key={product.title}
            />
          ))}
        </motion.div>
      </motion.div>
    </div>
  )
}

export const Header = () => {
  const navigate = useNavigate()
  const handleClick = () => {
    navigate('/auth/login')
  }
  return (
    <div className=" max-w-7xl relative mx-auto  px-4 w-full left-0 top-0">
      <div className="flex flex-col md:h-[80vh] h-[70vh]">
        <div className="h-[100%]">
          <h1 className="text-5xl md:text-7xl font-bold text-white opacity-100">
            Generate Your Investor Pitch
            <br />
            <span style={{ color: '#5480c1' }}>Deck in Just 5 Minutes</span>
          </h1>
        </div>
        <div className="h-[100%]">
          <p className="max-w-2xl text-base md:text-xl mt-8 text-neutral-200 opacity-100">
            The AI-powered presentation builder for startups and entrepreneurs.
            <br></br>
            Create your pitch deck presentation instantly and impress investors!
          </p>
        </div>
        <div className="h-[100%]">
          <div className="z-10 absolute w-max h-max">
            <AnimatedButon onclicked={handleClick} name={'Sign Up for Free'} />
          </div>
        </div>
      </div>
      <motion.h2
        className="text-2xl mt-20  md:text-4xl font-bold text-white text-center"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0, transition: { duration: 1 } }}
      >
        Imagining Early Stage Unicorn
        <br />
        <span style={{ color: '#5480c1' }}>Pitch Decks Generated by Zynth</span>
      </motion.h2>
      <motion.p
        className="text-[18px] text-white text-center md:px-20 py-4 opacity-50"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 0.7, y: 0, transition: { duration: 0.5 } }}
      >
        We created investor presentations for a few of the biggest unicorns,
        imagining them in their early stages, <br />
        to envision how our tool would have generated their pitch deck. And the
        results were amazing.
      </motion.p>
    </div>
  )
}

export const ProductCard = ({
  product,
  translate,
}: {
  product: {
    title: string
    link: string
    thumbnail: string
  }
  translate: MotionValue<number>
}) => {
  return (
    <motion.div
      id="samples"
      style={{
        x: translate,
      }}
      whileHover={{
        y: -20,
      }}
      key={product.title}
      className="group/product h-80 w-[35rem] relative flex-shrink-0"
    >
      <a href={product.link} className="block group-hover/product:shadow-2xl">
        <img
          src={product.thumbnail}
          className="object-fill object-left-top absolute h-full w-full inset-0"
          alt={product.title}
        />
      </a>
      <div className="absolute inset-0 h-full w-full opacity-0 group-hover/product:opacity-80 bg-black pointer-events-none"></div>
      <h2 className="absolute bottom-4 left-4 opacity-0 group-hover/product:opacity-100 text-white">
        {product.title}
      </h2>
    </motion.div>
  )
}
